/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&lt 3 TAB                  &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U        &kp I      &kp O    &kp P     &kp BSPC
&mt LEFT_CONTROL CAPSLOCK  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J        &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT             &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M        &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_CONTROL ESC
                                         &kp LGUI  &mo 1  &kp SPACE    &kp SPACE  &lt 2 ENTER  &kp RALT
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp C_BRI_UP  &trans          &kp F4     &trans        &kp F5    &kp F12            &trans          &kp UP            &trans      &trans                &kp C_AC_PRINT
&trans  &kp C_BRI_DN  &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &trans    &kp C_VOLUME_UP    &kp LEFT        &kp DOWN_ARROW    &kp RIGHT   &trans                &kp HOME
&trans  &trans        &trans          &trans     &trans        &trans    &kp C_VOLUME_DOWN  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp NON_US_BACKSLASH  &kp END
                                      &trans     &trans        &trans    &trans             &mo 4           &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp AT_SIGN  &trans         &kp EXCLAMATION   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND    &kp CARET  &kp SQT    &kp DOUBLE_QUOTES  &trans          &trans         &kp BSPC
&kp LCTRL    &kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE         &trans     &kp EQUAL  &kp MINUS          &kp UNDERSCORE  &trans         &kp GRAVE
&kp LSHFT    &trans         &kp QUESTION      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans           &trans     &trans     &trans             &trans          &kp BACKSLASH  &kp TILDE
                                              &kp LGUI              &trans                 &kp SPACE        &kp SPACE  &trans     &kp RALT
            >;
        };

        number_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp PLUS   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp STAR   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SLASH     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp HASH   &kp N7        &kp N8        &kp N9        &kp NUMBER_0  &trans
                        &trans  &trans  &trans    &kp ENTER  &trans        &trans
            >;
        };

        bluetooth_layer {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &bt BT_CLR      &trans  &trans  &trans
            >;
        };
    };
};
