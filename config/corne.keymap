/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |LT3TAB|  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // |CTCAPS|  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |SHESC |
            //                    | GUI | LWR | SPC |   | SPC |LT2ENT| ALT |

            bindings = <
&lt 3 TAB                  &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U        &kp I      &kp O    &kp P     &kp BSPC
&mt LEFT_CONTROL CAPSLOCK  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J        &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT             &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M        &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ESC
                                         &kp LGUI  &mo 1  &kp SPACE    &kp SPACE  &lt 2 ENTER  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |TRANS | F2  |NONE | F4  |NONE | F5  |   | F12 |NONE | UP  |NONE |NONE | DEL |
            // |BRI+ |NONE |SHFT |CTRL | ALT |NONE |   |VOL+ | LFT | DWN | RGT |NONE |HOME |
            // |BRI- |NONE |NONE |NONE |NONE |NONE |   |VOL- |PREV |PLAY |NEXT |NONE | END |
            //                   |TRANS|TRANS|TRANS|   |TRANS| MO4 |TRANS|

            bindings = <
&trans         &kp F2  &none           &kp F4     &none         &kp F5    &kp F12            &none           &kp UP            &none       &none  &kp DELETE
&kp C_BRI_UP   &none   &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &none     &kp C_VOLUME_UP    &kp LEFT        &kp DOWN_ARROW    &kp RIGHT   &none  &kp HOME
&kp C_BRI_DEC  &none   &none           &none      &none         &none     &kp C_VOLUME_DOWN  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &none  &kp END
                                       &trans     &trans        &trans    &trans             &mo 4           &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  @   |  "  |  #  |  (  |  %  |  &  |   |  ^  |  *  |  "  |  )  | RA_ |RCBSP|
            // |CTRL |NONE | < | > |NONE |  {  |   |  `  |  '  |  \  |  =  | S- |  S" |
            // |SHFT |NONE |NONE |NONE |NONE |RA} |   |NONE | S' | S\ | S= | S! |  {  |
            //                   | GUI |TRANS| SPC |   | SPC |TRANS| ALT |

            bindings = <
&kp AT_SIGN  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(LEFT_PARENTHESIS)  &kp LS(N5)  &kp LS(AMPERSAND)      &kp LS(NUMBER_7)  &kp LS(N8)        &kp LS(NUMBER_9)   &kp LS(NUMBER_0)  &kp RA(UNDERSCORE)  &kp RC(BSPC)
&kp LCTRL    &none             &kp LESS_THAN     &kp GREATER_THAN          &none       &kp LEFT_BRACE         &kp GRAVE         &kp SINGLE_QUOTE  &kp BACKSLASH      &kp EQUAL         &kp LS(MINUS)       &kp LS(NUMBER_2)
&kp LSHFT    &none             &none             &none                     &none       &kp RA(RIGHT_BRACE)    &none             &kp LS(APOS)      &kp LS(BACKSLASH)  &kp LS(EQUAL)     &kp LS(NUMBER_1)    &kp LEFT_BRACE
                                                 &kp LGUI                  &trans      &kp SPACE              &kp SPACE         &trans            &kp RALT
            >;
        };

        number_layer {
            // -----------------------------------------------------------------------------------------
            // |TRANS|TRANS|TRANS|TRANS|TRANS|TRANS|   |  +  |  1  |  2  |  3  |  /  |TRANS|
            // |TRANS|TRANS|TRANS|TRANS|TRANS|TRANS|   |  *  |  4  |  5  |  6  | S/ |TRANS|
            // |TRANS|TRANS|TRANS|TRANS|TRANS|TRANS|   | S3 |  7  |  8  |  9  |  0  |TRANS|
            //                   |TRANS|TRANS|TRANS|   |NONE | ENT |TRANS|

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp PLUS          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp STAR          &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LS(SLASH)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(NUMBER_3)  &kp N7        &kp N8        &kp N9        &kp NUMBER_0   &trans
                        &trans  &trans  &trans    &none             &kp ENTER     &trans
            >;
        };

        bluetooth_layer {
            // -----------------------------------------------------------------------------------------
            // |TRANS|TRANS|TRANS|TRANS|TRANS|TRANS|   |TRANS|TRANS|TRANS|TRANS|TRANS|TRANS|
            // |TRANS| BT0 | BT1 | BT2 | BT3 | BT4 |   |TRANS|TRANS|TRANS|TRANS|TRANS|TRANS|
            // |TRANS|TRANS|TRANS|TRANS|TRANS|TRANS|   |TRANS|TRANS|TRANS|TRANS|TRANS|TRANS|
            //                   |TRANS|TRANS|BTCLR|   |TRANS|TRANS|TRANS|

            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &bt BT_CLR      &trans  &trans  &trans
            >;
        };
    };
};
